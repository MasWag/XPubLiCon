#+OPTIONS: toc:nil
#+OPTIONS: H:4

* Complete (X)HTML Generation Example

This is an example to generate a complete (X)HTML file.

** Files

This example generates a complete (X)HTML file ([[./index.html][index.html]]) from the following files. 

- =../data.xml=: The input XPubLiCon XML file
- =./Makefile=: The makefile to define the rule of file generation
- =./index_template.html=: The XML file that is a template of the generated (X)HTML file
- =../../xslt/publications_html.xsl=, =../../xslt/talks_html.xsl=, =../../xslt/tools_html.xsl=, =../../xslt/teaching_experience_html.xsl=: The XSLT files to generate a fragments of (X)HTML files from =../data.xml=
- =./style.css=: The stylesheet CSS file used in the generated (X)HTML file

** Usage

You can generate a complete (X)HTML file by the following.

#+BEGIN_SRC sh :result raw
make
#+END_SRC

** Explanation of each files

*** Template (X)HTML file

Here is the (X)HTML file that is the template of the resulting (X)HTML file.

#+BEGIN_SRC xml :tangle index_template.html :noweb yes
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:xi="http://www.w3.org/2003/XInclude" lang="en">
<head>
<link rel="stylesheet" type="text/css" href="style.css" />
<meta http-equiv="content-type" content="application/xhtml+xml" />
<title>Masaki Waga (和賀 正樹)</title>
</head>
<body>
<<HTML_TEMPLATES>>
</body>
</html>
#+END_SRC

**** XML Inclusions

In the following part, [[https://www.w3.org/TR/xinclude/][XML Inclusions (XInclude)]] is used to include the generated (X)HTML files.

#+NAME: HTML_TEMPLATES
#+BEGIN_SRC xml
<h2>Publications and Theses</h2>
  <xi:include href="publications.html" parse="xml" />

<h2 id="tools">Tools</h2>
  <xi:include href="tools.html" parse="xml" />

<h2>Selected Talks</h2>
  <xi:include href="talks.html" parse="xml" />

<h2>Teaching Experiences</h2>
  <xi:include href="teaching_experience.html" parse="xml" />
#+END_SRC

*** Makefile to Generate Complete (X)HTML File

The following is the Makefile to generate a complete HTML file.

#+BEGIN_SRC makefile :tangle Makefile :noweb yes
<<GENERATE_WHOLE>>

<<GENERATE_FRAGMENT>>

clean:
	$(RM) publications.html tools.html talks.html teaching_experience.html index.html
.PHONY: clean
#+END_SRC

**** Generate fragments of the (X)HTML file

First, we make a rule to generate a fragment of (X)HTML file from using xsltproc. We note that we can use any other XSLT processor e.g., saxon instead.

#+NAME: GENERATE_FRAGMENT
#+BEGIN_SRC makefile
%.html: ../../xslt/%_html.xsl ../data.xml
	xsltproc $^ > $@
#+END_SRC

**** Generate the Complete (X)HTML File

Then, we make a rule to generate a complete (X)HTML file by combining the (X)HTML files generated by the above rule. Here, we use =xmllint= to process XInclusion.

#+NAME: GENERATE_WHOLE
#+BEGIN_SRC makefile
index.html: index_template.html publications.html tools.html talks.html teaching_experience.html
	xmllint $< --xinclude --output $@ --noent
#+END_SRC

** Note for the Example Maintainer

All the files in this directory except for =style.css= are generated from =README.org=. Please modify =README.org= and re-generate the resulting file when you want to update the example using Emacs. =Makefile= and =index_template.html= are generated by =C-c C-v t= (or =M-x org-babel-tangle=). =README.md= is generated by =C-c C-e g g=. We note that you have to install =ox-gfm= and execute the following to export =README.md=.

#+BEGIN_SRC elisp
(require 'ox-gfm)
#+END_SRC

* COMMENT MISC

The following must be executed to preserve indentation by <TAB>, which is necessary for makefile.

#+BEGIN_SRC elisp
(setq org-src-preserve-indentation t)
#+END_SRC
